// TODO: make a method that deletes the ticker file everyday... or at startup
// TODO: Could then add it as a complexity as it caches files...

    public Float[][] getHistorical_data() throws Exception {
        // TODO: make a method that the ticker file everyday... or at startup, if not, just remove this if check...
        // TODO: Could then add it as a complexity as it caches files...
        if (!fileHandler.checkIsFile("data/"+ticker+".csv")) { // fetch new data if it already doesn't exist
            this.historical_data = historicalData.get(tickerYF); // using Yahoo Finance ticker format...
        }
        return historical_data;
    }


// TODO: I came the the realisation that as I have been curve fitting for the SMAs, it might not work for the future, however the algorithm does self update as the days pass but still there might be something I can do to generalise it a bit instead of just fitting it to get best returns on the data already available.


// TODO: Finnhub profile only returns info about stocks... however, it does provide LIVE PRICE DATA FOR STOCKS, CRYPTOS AND FOREX
// TODO: So I might end up using the websocket of finnhub for live data, however, it is slow compared to alpaca, atleast I think so
// TODO: if it's the case, as I'm implementing inheritance, I will use alpaca for stocks and crypto and only use finnhub for forex

// TODO: So in the watchlist, the name will be formatted accordingly even before being passed to the asset classes
// TODO: as the filename of those don't matter... eg: GBPUSD=X BTC-USD, that's the correct format for them...

// TODO: Might have a dark and light theme option, and for the stock logos, make like a circle or a square and make background of it
White so it remains consistent, and the rest in dark mode... but might just be a hassle, just an if idea

// Commands to get git commit logs...
$ git log --pretty=format:"%cD, %cr, %s" > history.csv
$ git log --pretty=format:"%cr, %s" > history.csv
